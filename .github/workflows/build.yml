name: Node.js CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: self-hosted

    env:
      REGISTRY: ghcr.io
      APP_IMAGE: ghcr.io/${{ github.repository }}/${{ github.ref_name }}/app

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Build and package
        run: |
          yarn cache clean --mirror
          yarn run bootstrap:ci
          yarn run build
          cd packages/contensis-cli
          APP_VERSION=$(node --eval="process.stdout.write(require('./package.json').version)")
          npm pack
          npm i -g contensis-cli-$APP_VERSION.tgz
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Test running the cli
        run: |
          # contensis-cli push block node-cli-ci-block ${{ env.APP_IMAGE }}:latest -r -cmsg "${{ github.event.head_commit.message }}" -cdt ${{ github.event.head_commit.timestamp }} -author ${{ github.event.head_commit.author.email }} -committer ${{ github.event.head_commit.committer.email }} -a zenhub-dev -p contensis -id ${{ secrets.CONTENSIS_CLIENT_ID }} -s ${{ secrets.CONTENSIS_SHARED_SECRET }}
          contensis connect zenhub-dev -p migratortron -id ${{ secrets.CONTENSIS_CLIENT_ID }} -s ${{ secrets.CONTENSIS_SHARED_SECRET }}
          contensis get entries
          # contensis-cli get entries -q "externalURL EXISTS" -a trial-006 -p leif2 -id e4376db2-ed3e-49d3-a799-a6ec733a3611 -s a8590f6b4630404186b72fea198d3c12-c6f1f565eb86428ea0170e1b4b8a4b7f-de88eb42e46c4d548a8c36f490f34866
          contensis-cli connect trial-006
          contensis-cli login zengenti 123456

      - name: Archive packaged artifacts
        uses: actions/upload-artifact@v3
        with:
          name: contensis-cli-${{ env.APP_VERSION }}
          path: |
            packages/contensis-cli/contensis-cli-${{ env.APP_VERSION }}.tgz

      - name: Log into container registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image and push to ${{ env.APP_IMAGE }}:latest
        run: |
          docker pull ${{ env.APP_IMAGE }}:latest || true
          echo "{\"commitRef\":\"${{ github.sha }}\",\"pipelineIID\":\"null\",\"pipelineUrl\":\"${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}\",\"buildNo\":\"${{ github.run_id }}\",\"branchName\":\"${{ github.ref_name }}\",\"registryImage\":\"${{ env.APP_IMAGE }}\"}" > version.json
          docker build --force-rm --cache-from ${{ env.APP_IMAGE }}:latest -t ${{ env.APP_IMAGE }}:latest -f Dockerfile .
          docker push ${{ env.APP_IMAGE }}:latest

      - name: Push block to Contensis
        # uses: ./.github/actions/contensis-cli
        # uses: contensis/cli-action@v1
        # uses: ./.github/actions/push-block
        uses: contensis/block-push@v1
        with:
          block-id: node-cli-ci-block
          auto-release: true
          alias: zenhub-dev
          project-id: contensis
          client-id: ${{ secrets.CONTENSIS_CLIENT_ID }}
          shared-secret: ${{ secrets.CONTENSIS_SHARED_SECRET }}

      - name: Get entries from Contensis
        # uses: ./.github/actions/contensis-cli
        uses: contensis/cli-action@v1
        with:
          command: get entries
          alias: zenhub-dev
          project-id: migratortron
          client-id: ${{ secrets.CONTENSIS_CLIENT_ID }}
          shared-secret: ${{ secrets.CONTENSIS_SHARED_SECRET }}
