name: 'Contensis block push action'
description: 'A GitHub Action for pushing a block to Contensis CMS'
author: 'Zengenti'

branding:
  icon: 'package'
  color: 'green'

inputs:
  alias:
    description: 'The Contensis cloud alias to connect to'
    required: true
  project-id:
    description: 'The id of the project to connect to'
    required: false
    default: website
  client-id:
    description: 'Client id to connect to the supplied alias'
    required: true
  shared-secret:
    description: 'Shared secret to use with the supplied client id'
    required: true
  block-id:
    description: 'The id of the block to push to'
    required: true
  image-uri:
    description: 'The repository uri of the container image to build the block from'
    required: false
    default: ghcr.io/${{ github.repository }}/${{ github.ref_name }}/app:latest
  auto-release:
    description: 'Whether to release the block upon successful push'
    required: false
    default: false
  tag-repo:
    description: 'Whether to push a tag to the git repo upon successful block push'
    required: false
    default: false
  git-token:
    description: 'The git token from secrets to use when pushing to the git repo upon successful block push'
    required: false
    default: ${{ github.token }}

outputs:
  block-version:
    description: 'The version number of the pushed block'
    value: ${{ steps.set.outputs.block-version }}
  git-tag:
    description: 'The suggested tag name to tag the commit after the block is pushed'
    value: block-${{ inputs.project-id }}-${{ steps.set.outputs.block-version }}

runs:
  using: 'composite'

  steps:
    - name: Pull Contensis CLI docker image and run commands
      id: cli
      # uses: contensis/cli-action@v1
      uses: ./.github/actions/cli-action
      with:
        alias: ${{ inputs.alias }}
        project-id: ${{ inputs.project-id}}
        client-id: ${{ inputs.client-id }}
        shared-secret: ${{ inputs.shared-secret }}
        command: push block ${{ inputs.block-id }} ${{ inputs.image-uri }} ${{ github.ref_name }}${{ inputs.auto-release && ' --release' || '' }} --provider Github --repository-url ${{ github.server_url }}/${{ github.repository }}.git --commit-id ${{ github.sha }} --commit-message "${{ github.event.head_commit.message }}" --commit-datetime ${{ github.event.head_commit.timestamp }} --author-email ${{ github.event.head_commit.author.email }} --committer-email ${{ github.event.head_commit.committer.email }}
        cli-version: latest
        cli-splash: false

    - name: Set output variables
      id: set
      shell: bash
      run: |
        OUTPUT=$(echo ${{ steps.cli.outputs.command-output }})
        VERSION_NO=$(echo -e $OUTPUT | jq .version.versionNo)
        echo "Setting block-version: $VERSION_NO"
        echo "block-version=$VERSION_NO" >> $GITHUB_OUTPUT
        echo "set GITHUB_OUTPUT.block-version OK"

    - uses: actions/checkout@v3
      with:
        token: ${{ inputs.git-token }}
      if: inputs.tag-repo && (github.ref_name == 'master' || github.ref_name == 'main') && steps.set.outputs.block-version != ''
    - name: Tag repo with block version
      if: inputs.tag-repo && (github.ref_name == 'master' || github.ref_name == 'main') && steps.set.outputs.block-version != ''
      shell: bash
      run: |
        TAG=block-${{ inputs.project-id }}-${{ steps.set.outputs.block-version }}
        VERSION=${{ steps.set.outputs.block-version }}
        echo "Tagging commit with block version: $VERSION"
        git tag $TAG
        git push origin $TAG
