name: 'Contensis cli action'
description: 'A GitHub Action for interacting with a Contensis CMS via the cli'
author: 'Zengenti'
branding:
  icon: 'terminal'
  color: 'blue'
inputs:
  alias:
    description: 'The Contensis cloud alias to connect to'
    required: true
  project-id:
    description: 'The id of the project to connect to'
    required: false
    default: website
  client-id:
    description: 'Client id to connect to the supplied alias'
    required: true
  shared-secret:
    description: 'Shared secret to use with the supplied client id'
    required: true
  block-id:
    description: 'The id of the block to push to'
    required: false
  image-uri:
    description: 'The repository uri of the container image to build the block from'
    required: false
    default: ghcr.io/${{ github.repository }}/${{ github.ref_name }}/app:latest
  auto-release:
    description: 'Whether to release the block upon successful push'
    required: false
    default: false
  command:
    description: 'Optional: which cli command to run'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Pull Contensis CLI docker image and run commands
      uses: addnab/docker-run-action@v3
      with:
        image: ghcr.io/contensis/node-cli/main/app:latest
        run: |
          contensis
          contensis connect ${{ inputs.alias }} -id ${{ inputs.client-id }} -s ${{ inputs.shared-secret }} -p ${{ inputs.project-id }}
          if [ -n ${{ inputs.block-id || '""' }} ]
          then
            contensis push block ${{ inputs.block-id }} ${{ inputs.image-uri }} ${{ github.ref_name }}${{ (inputs.auto-release == true && ' --release') || '' }} --provider Github --repository-url ${{ github.server_url }}/${{ github.repository }}.git --commit-id ${{ github.sha }} --commit-message "${{ github.event.head_commit.message }}" --commit-datetime ${{ github.event.head_commit.timestamp }} --author-email ${{ github.event.head_commit.author.email }} --committer-email ${{ github.event.head_commit.committer.email }}
          else
            contensis ${{ inputs.command || '--help' }}
          fi
    # - name: Create environments file
    #   shell: bash
    #   run: touch environments.json
    # - name: Pull Contensis CLI docker image
    #   uses: docker://ghcr.io/contensis/node-cli/main/app:latest
    # - name: Connect to Contensis and run command
    #   shell: bash
    #   run: |
    #     docker run --rm -v $(pwd)/environments.json:/usr/src/app/environments.json ghcr.io/contensis/node-cli/main/app:latest contensis connect ${{ inputs.alias }} -id ${{ inputs.client-id }} -s ${{ inputs.shared-secret }} -p ${{ inputs.project-id }}
    #     if [ -n ${{ inputs.block-id || '' }} ]
    #     then
    #       docker run --rm -v $(pwd)/environments.json:/usr/src/app/environments.json ghcr.io/contensis/node-cli/main/app:latest contensis push block ${{ inputs.block-id }} ${{ inputs.image-uri }} ${{ github.ref_name }}${{ (inputs.auto-release == true && ' --release') || '' }} --provider Github --repository-url ${{ github.server_url }}/${{ github.repository }}.git --commit-id ${{ github.sha }} --commit-message "${{ github.event.head_commit.message }}" --commit-datetime ${{ github.event.head_commit.timestamp }} --author-email ${{ github.event.head_commit.author.email }} --committer-email ${{ github.event.head_commit.committer.email }}
    #     else
    #       docker run --rm -v $(pwd)/environments.json:/usr/src/app/environments.json ghcr.io/contensis/node-cli/main/app:latest contensis ${{ inputs.command || '--help' }}
    #     fi
